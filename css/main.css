body {
  /* IE10 Consumer Preview */
  /* Mozilla Firefox */
  /* Opera */
  /* Webkit (Safari/Chrome 10) */
  background-image: -webkit-gradient(radial, center center, 0, center center, 140, color-stop(0, #f5f5f5), color-stop(4, #646464));
  /* Webkit (Chrome 11+) */
  background-image: -webkit-radial-gradient(center, circle closest-side, #f5f5f5 0%, #646464 400%);
  /* W3C Markup, IE10 Release Preview */
  background-image: radial-gradient(circle closest-side at center, #f5f5f5 0%, #646464 400%);
  height: 100vh;
  width: 100%;
  overflow: hidden;
  position: relative;
}
body > div[ng-view] {
  height: 100%;
  width: 100%;
  margin: auto;
  display: table;
  overflow: hidden;
  position: absolute;
  text-align: center;
}
body section {
  text-align: center;
  width: 100%;
  margin: auto;
  display: table-cell;
  vertical-align: middle;
}
body section h1 {
  font-family: "League Gothic", Impact, sans-serif;
  margin-bottom: 0px;
}
body section h2 {
  font-family: "League Gothic", Impact, sans-serif;
  margin-top: 0px;
}
body section h3 {
  font-family: 'Ubuntu', "Trebuchet MS", Trebuchet, Verdana, Helvetica, Arial, sans-serif;
  font-weight: normal;
}
@media only screen and (min-width: 641px) {
  section h1 {
    font-size: 75px;
  }
  section h2 {
    font-size: 45px;
  }
  section h3 {
    font-size: 15px;
  }
}
@media only screen and (max-width: 640px) {
  section {
    float: none !important;
  }
  section h1 {
    font-size: 45px;
  }
  section h2 {
    font-size: 25px;
  }
  section h3 {
    font-size: 12px;
  }
}
.slide.forward .slide-animation.ng-enter,
.slide.forward .slide-animation.ng-leave {
  -webkit-transition: all 0.6s ease-in;
          transition: all 0.6s ease-in;
}
.slide.forward .slide-animation.ng-enter {
  -webkit-transform: translateY(-100%);
      -ms-transform: translateY(-100%);
          transform: translateY(-100%);
}
.slide.forward .slide-animation.ng-enter-active {
  -webkit-transform: translateY(0);
      -ms-transform: translateY(0);
          transform: translateY(0);
}
.slide.forward .slide-animation.ng-leave {
  -webkit-transform: translateY(0);
      -ms-transform: translateY(0);
          transform: translateY(0);
}
.slide.forward .slide-animation.ng-leave-active {
  -webkit-transform: translateY(100%);
      -ms-transform: translateY(100%);
          transform: translateY(100%);
}
.slide.afterward .slide-animation.ng-enter,
.slide.afterward .slide-animation.ng-leave {
  -webkit-transition: all 0.6s ease-in;
          transition: all 0.6s ease-in;
}
.slide.afterward .slide-animation.ng-enter {
  -webkit-transform: translateY(100%);
      -ms-transform: translateY(100%);
          transform: translateY(100%);
}
.slide.afterward .slide-animation.ng-enter-active {
  -webkit-transform: translateY(0);
      -ms-transform: translateY(0);
          transform: translateY(0);
}
.slide.afterward .slide-animation.ng-leave {
  -webkit-transform: translateY(0);
      -ms-transform: translateY(0);
          transform: translateY(0);
}
.slide.afterward .slide-animation.ng-leave-active {
  -webkit-transform: translateY(-100%);
      -ms-transform: translateY(-100%);
          transform: translateY(-100%);
}
@media only screen and (min-width: 641px) {
  .learn section h3 {
    font-size: 20px;
  }
}
@media only screen and (max-width: 640px) {
  .learn section h3 {
    font-size: 14px;
  }
}
.bye-words {
  font-family: "Segoe Print";
  font-weight: bold;
}
.node {
  stroke: #fff;
  stroke-width: 1.5px;
}
.link {
  stroke: #999;
  stroke-opacity: .6;
}
@media only screen and (min-width: 641px) {
  .development section h2 {
    margin-bottom: 0;
  }
  .development section h3 {
    margin-top: 0;
    font-family: "League Gothic", Impact, sans-serif;
    font-size: 20px;
  }
}
@media only screen and (max-width: 640px) {
  .development section h2 {
    margin-bottom: 0;
  }
  .development section h3 {
    margin-top: 0;
    font-family: "League Gothic", Impact, sans-serif;
    font-size: 14px;
  }
}
.compatibility h3 {
  font-family: "klavika-web", "Helvetica Neue", Helvetica, Arial, Geneva, sans-serif;
  font-weight: bold;
}
.compatibility p {
  margin-top: 50px;
  font-family: "Segoe Print";
  font-size: 17px;
}
@media only screen and (min-width: 641px) {
  .compatibility section h2 {
    margin-bottom: 0;
  }
  .compatibility section h3 {
    margin-top: 0;
    font-size: 20px;
  }
}
@media only screen and (max-width: 640px) {
  .compatibility section h2 {
    margin-bottom: 0;
  }
  .compatibility section h3 {
    margin-top: 0;
    font-size: 14px;
  }
}
.ux span {
  margin: 0 10px;
  font-size: 40px;
  font-weight: bold;
}
.ux img {
  width: 290px;
}
.list {
  margin: auto;
  padding-left: 50px;
  list-style-type: disc;
  font-family: "klavika-web", "Helvetica Neue", Helvetica, Arial, Geneva, sans-serif;
  font-weight: bold;
  width: 200px;
}
.list li {
  padding-left: 15px;
  text-align: left;
}
/*# sourceMappingURL=data:application/json;base64, */